#ifndef DefinitionH
#define DefinitionH
#include <time.h>


#define prv	private:
#define pbl	public:
#define fcl	__fastcall
#define vrt	virtual
//==============================================================================
typedef __int8				i8;
typedef unsigned __int8		u8;
typedef __int16				i16;
typedef unsigned __int16	u16;
typedef __int32				i32;
typedef unsigned __int32	u32;
typedef __int64     		i64;
typedef unsigned __int64 	u64;
typedef float				r32;
typedef double				r64;

enum EDirect{INP = 0, OUTP = 1, INP_OUTP = 2,UNUSED = 255};

u8 	BIT8[8]		= {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};

const u16 BIT16[16]	= 	{0x0001, 0x0002, 0x0004, 0x0008,
						 0x0010, 0x0020, 0x0040, 0x0080,
						 0x0100, 0x0200, 0x0400, 0x0800,
						 0x1000, 0x2000, 0x4000, 0x8000};

const u32 BIT32[32]	=	{0x00000001, 0x00000002, 0x00000004, 0x00000008,
						 0x00000010, 0x00000020, 0x00000040, 0x00000080,
						 0x00000100, 0x00000200, 0x00000400, 0x00000800,
						 0x00001000, 0x00002000, 0x00004000, 0x00008000,
						 0x00010000, 0x00020000, 0x00040000, 0x00080000,
						 0x00100000, 0x00200000, 0x00400000, 0x00800000,
						 0x01000000, 0x02000000, 0x04000000, 0x08000000,
						 0x10000000, 0x20000000, 0x40000000, 0x80000000};

u64 BIT64[64]	={0x0000000000000001, 0x0000000000000002, 0x0000000000000004, 0x0000000000000008,
				  0x0000000000000010, 0x0000000000000020, 0x0000000000000040, 0x0000000000000080,
				  0x0000000000000100, 0x0000000000000200, 0x0000000000000400, 0x0000000000000800,
				  0x0000000000001000, 0x0000000000002000, 0x0000000000004000, 0x0000000000008000,
				  0x0000000000010000, 0x0000000000020000, 0x0000000000040000, 0x0000000000080000,
				  0x0000000000100000, 0x0000000000200000, 0x0000000000400000, 0x0000000000800000,
				  0x0000000001000000, 0x0000000002000000, 0x0000000004000000, 0x0000000008000000,
				  0x0000000010000000, 0x0000000020000000, 0x0000000040000000, 0x0000000080000000,
				  0x0000000100000000, 0x0000000200000000, 0x0000000400000000, 0x0000000800000000,
				  0x0000001000000000, 0x0000002000000000, 0x0000004000000000, 0x0000008000000000,
				  0x0000010000000000, 0x0000020000000000, 0x0000040000000000, 0x0000080000000000,
				  0x0000100000000000, 0x0000200000000000, 0x0000400000000000, 0x0000800000000000,
				  0x0001000000000000, 0x0002000000000000, 0x0004000000000000, 0x0008000000000000,
				  0x0010000000000000, 0x0020000000000000, 0x0040000000000000, 0x0080000000000000,
				  0x0100000000000000, 0x0200000000000000, 0x0400000000000000, 0x0800000000000000,
				  0x1000000000000000, 0x2000000000000000, 0x4000000000000000, 0x8000000000000000};

u8 	_BIT8[8]   	= {0xFE, 0xFD, 0xFB, 0xF7, 0xEF, 0xDF, 0xBF, 0x7F};

u16 _BIT16[16]	= {0xFFFE, 0xFFFD, 0xFFFB, 0xFFF7,
				   0xFFEF, 0xFFDF, 0xFFBF, 0xFF7F,
				   0xFEFF, 0xFDFF, 0xFBFF, 0xF7FF,
				   0xEFFF, 0xDFFF, 0xBFFF, 0x7FFF};

u32 _BIT32[32]	={0xFFFFFFFE, 0xFFFFFFFD, 0xFFFFFFFB, 0xFFFFFFF7,
				  0xFFFFFFEF, 0xFFFFFFDF, 0xFFFFFFBF, 0xFFFFFF7F,
				  0xFFFFFEFF, 0xFFFFFDFF, 0xFFFFFBFF, 0xFFFFF7FF,
				  0xFFFFEFFF, 0xFFFFDFFF, 0xFFFFBFFF, 0xFFFF7FFF,
				  0xFFFEFFFF, 0xFFFDFFFF, 0xFFFBFFFF, 0xFFF7FFFF,
				  0xFFEFFFFF, 0xFFDFFFFF, 0xFFBFFFFF, 0xFF7FFFFF,
				  0xFEFFFFFF, 0xFDFFFFFF, 0xFBFFFFFF, 0xF7FFFFFF,
				  0xEFFFFFFF, 0xDFFFFFFF, 0xBFFFFFFF, 0x7FFFFFFF};

u64 _BIT64[64]	={0xFFFFFFFFFFFFFFFE, 0xFFFFFFFFFFFFFFFD, 0xFFFFFFFFFFFFFFFB, 0xFFFFFFFFFFFFFFF7,
				  0xFFFFFFFFFFFFFFEF, 0xFFFFFFFFFFFFFFDF, 0xFFFFFFFFFFFFFFBF, 0xFFFFFFFFFFFFFF7F,
				  0xFFFFFFFFFFFFFEFF, 0xFFFFFFFFFFFFFDFF, 0xFFFFFFFFFFFFFBFF, 0xFFFFFFFFFFFFF7FF,
				  0xFFFFFFFFFFFFEFFF, 0xFFFFFFFFFFFFDFFF, 0xFFFFFFFFFFFFBFFF, 0xFFFFFFFFFFFF7FFF,
				  0xFFFFFFFFFFFEFFFF, 0xFFFFFFFFFFFDFFFF, 0xFFFFFFFFFFFBFFFF, 0xFFFFFFFFFFF7FFFF,
				  0xFFFFFFFFFFEFFFFF, 0xFFFFFFFFFFDFFFFF, 0xFFFFFFFFFFBFFFFF, 0xFFFFFFFFFF7FFFFF,
				  0xFFFFFFFFFEFFFFFF, 0xFFFFFFFFFDFFFFFF, 0xFFFFFFFFFBFFFFFF, 0xFFFFFFFFF7FFFFFF,
				  0xFFFFFFFFEFFFFFFF, 0xFFFFFFFFDFFFFFFF, 0xFFFFFFFFBFFFFFFF, 0xFFFFFFFF7FFFFFFF,
				  0xFFFFFFFEFFFFFFFF, 0xFFFFFFFDFFFFFFFF, 0xFFFFFFFBFFFFFFFF, 0xFFFFFFF7FFFFFFFF,
				  0xFFFFFFEFFFFFFFFF, 0xFFFFFFDFFFFFFFFF, 0xFFFFFFBFFFFFFFFF, 0xFFFFFF7FFFFFFFFF,
				  0xFFFFFEFFFFFFFFFF, 0xFFFFFDFFFFFFFFFF, 0xFFFFFBFFFFFFFFFF, 0xFFFFF7FFFFFFFFFF,
				  0xFFFFEFFFFFFFFFFF, 0xFFFFDFFFFFFFFFFF, 0xFFFFBFFFFFFFFFFF, 0xFFFF7FFFFFFFFFFF,
				  0xFFFEFFFFFFFFFFFF, 0xFFFDFFFFFFFFFFFF, 0xFFFBFFFFFFFFFFFF, 0xFFF7FFFFFFFFFFFF,
				  0xFFEFFFFFFFFFFFFF, 0xFFDFFFFFFFFFFFFF, 0xFFBFFFFFFFFFFFFF, 0xFF7FFFFFFFFFFFFF,
				  0xFEFFFFFFFFFFFFFF, 0xFDFFFFFFFFFFFFFF, 0xFBFFFFFFFFFFFFFF, 0xF7FFFFFFFFFFFFFF,
				  0xEFFFFFFFFFFFFFFF, 0xDFFFFFFFFFFFFFFF, 0xBFFFFFFFFFFFFFFF, 0x7FFFFFFFFFFFFFFF};


const u8 	x08		= 0x00;
const u8 	xF8		= 0xFF;
const u16 	x016	= 0x0000;
const u16 	xF16	= 0xFFFF;
const u32 	x032	= 0x00000000;
const u32 	xF32	= 0xFFFFFFFF;
const u64 	x064	= 0x0000000000000000;
const u64 	xF64	= 0xFFFFFFFFFFFFFFFF;













#endif
